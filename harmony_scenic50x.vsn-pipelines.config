manifest {
   name = 'vib-singlecell-nf/vsn-pipelines'
   description = 'A repository of pipelines for single-cell data in Nextflow DSL2'
   homePage = 'https://github.com/vib-singlecell-nf/vsn-pipelines'
   version = '0.19.0'
   mainScript = 'main.nf'
   defaultBranch = 'master'
   nextflowVersion = '!20.04.1'
}

params {
   global {
      project_name = 'GC_ALL_MALIGNANT_50x'
      outdir = 'out'
      qsubaccount = 'lp_sequencing'
      qsubemail = ''
      threads = 19
      species = 'human'
      genome {
         assembly = 'hg38'
      }
   }
   misc {
      test {
         enabled = false
      }
   }
   sc {
      file_concatenator {
         join = 'outer'
         off = 'h5ad'
      }
      scanpy {
         container = 'vibsinglecellnf/scanpy:0.5.0'
         report {
            annotations_to_plot = []
         }
         feature_selection {
            report_ipynb = '/src/scanpy/bin/reports/sc_select_variable_genes_report.ipynb'
            method = 'mean_disp_plot'
            minMean = 0.0125
            maxMean = 3
            minDisp = 0.5
            off = 'h5ad'
         }
         feature_scaling {
            method = 'zscore_scale'
            maxSD = 10
            off = 'h5ad'
         }
         neighborhood_graph {
            nPcs = 50
            off = 'h5ad'
         }
         dim_reduction {
            report_ipynb = '/src/scanpy/bin/reports/sc_dim_reduction_report.ipynb'
            pca {
               method = 'pca'
               nComps = 50
               off = 'h5ad'
            }
            umap {
               method = 'umap'
               off = 'h5ad'
            }
            tsne {
               method = 'tsne'
               nJobs = 10
               off = 'h5ad'
            }
         }
         clustering {
            report_ipynb = '/src/scanpy/bin/reports/sc_clustering_report.ipynb'
            method = 'louvain'
            resolution = 0.8
            off = 'h5ad'
         }
         marker_genes {
            method = 'wilcoxon'
            ngenes = 0
            groupby = 'louvain'
            off = 'h5ad'
         }
        // filter {
         //   report_ipynb = '/src/scanpy/bin/reports/sc_filter_qc_report.ipynb'
         //   cellFilterMinNGenes = 200
         //   cellFilterMaxNGenes = 4000
         //   cellFilterMaxPercentMito = 0.15
         //   geneFilterMinNCells = 3
         //   off = 'h5ad'
          //  outdir = 'out'
       //  }
         data_transformation {
            method = 'log1p'
            off = 'h5ad'
         }
         normalization {
            method = 'cpx'
            countsPerCellAfter = 10000
            off = 'h5ad'
         }
      }
      harmony {
      labels {
           processExecutor = 'pbs'
        }
         container = 'vibsinglecellnf/harmony:1.0'
         report_ipynb = '/src/harmony/bin/reports/sc_harmony_report.ipynb'
         varsUse = ['batch']
         }
      scenic {
      labels {
           processExecutor = 'pbs'
        }
         container = 'aertslab/pyscenic:0.10.3'
         scenicoutdir = 'out/scenic/'
         report_ipynb = '/src/scenic/bin/reports/scenic_report.ipynb'
         filteredLoom = ''
         scenicOutputLoom = 'SCENIC_output.loom'
         scenicScopeOutputLoom = 'SCENIC_SCope_output.loom'
         mode = 'dask_multiprocessing'
         client_or_address = ''
         numWorkers = 34
         cell_id_attribute = 'CellID'
         gene_attribute = 'Gene'
         grn {
            labels {
               processExecutor = 'pbs'
            }
            algorithm = 'grnboost2'
            pmem = '2gb'
            maxForks = 10
            numWorkers = 34
            walltime = '23:59:59'
            tfs = '/staging/leuven/stg_00054/Scenic_human/Databases/allTFs_hg38.txt'
         }
         cistarget {
            labels {
               processExecutor = 'pbs'
            }
            adj = 'adj.tsv'
            type = ''
            output = 'reg.csv'
            rank_threshold = 5000
            auc_threshold = 0.05
            nes_threshold = 3.0
            min_orthologous_identity = 0.0
            max_similarity_fdr = 0.001
            annotations_fname = ''
            thresholds = '0.75,0.90'
            top_n_targets = 50
            top_n_regulators = '5,10,50'
            min_genes = 20
            pmem = '12gb'
            maxForks = 10
            numWorkers = 10
            walltime = '23:59:59'
            motifsDb = '/staging/leuven/stg_00054/Scenic_human/Databases/*feather'
            motifsAnnotation = '/staging/leuven/stg_00054/Scenic_human/Databases/motifs-v9-nr.hgnc-m0.001-o0.0.tbl'
         }
         aucell {
            labels {
               processExecutor = 'pbs'
            }
            output = 'aucell_output.loom'
            rank_threshold = 5000
            auc_threshold = 0.05
            nes_threshold = 3.0
            pmem = '2gb'
            maxForks = 10
            numWorkers = 34
            walltime = '01:59:59'
            min_genes_regulon = 5
            min_regulon_gene_occurrence = 2
         }
         numRuns = 50
         aggregate_features {
            use_chunking = true
            output_format = 'csv'
            compression = 'gzip'
         }
         motifs_to_regulons {
            pmem = '4gb'
         }
         save_to_loom {
            pmem = '2gb'
         }
      }
      file_converter {
         iff = 'loom'
         tagCellWithSampleId = true
         useFilteredMatrix = true
         makeVarIndexUnique = false
      }
      scope {
         genome = ''
         tree {
            level_1 = ''
            level_2 = ''
            level_3 = ''
         }
      }
   }
   data {
      loom {
         file_paths = '/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC34.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC35.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC33.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC32.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC31.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC30.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC29.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC23.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC28.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC27.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC26.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC25.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC24.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC22.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC21.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC19.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC20.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC18.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC17.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC16.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC15.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC14.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC13.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC12.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC10.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC11.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC9.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC8.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC7.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC5.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC6.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC4.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC1.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC3.loom,/staging/leuven/stg_00054/Joanna/Grand_Challenge/MALIGNANT/SCENIC/loom_files/SCENIC2.loom'
         suffix = '.loom'
      }
   }
   utils {
      container = 'vibsinglecellnf/utils:0.3.0'
      workflow_configuration {
         report_ipynb = '/src/utils/bin/reports/workflow_configuration_template.ipynb'
      }
      publish {
         compressionLevel = 6
      }
   }
   parseConfig = { sample, paramsGlobal, paramsLocal ->
         def lv = { a,b -> return org.codehaus.groovy.runtime.MethodRankHelper.delDistance(a, b) }
         def pL = paramsLocal.collectEntries { k,v ->
            if (v instanceof Map) {
               if (v.containsKey(sample))
                  return [k, v[sample]]
               if (v.containsKey('default'))
                  return [k, v['default']]
               def closeMatches = v.collectEntries { vk, vv -> [lv(vk, sample), vk] }.keySet().findAll { it < 30}
               if(closeMatches.size() > 0)
                  throw new Exception("The sample " + sample + " is not found in " + v +" ; Make sure your samples are correctly specified when using the multi-sample feature.")
               else
                  return [k,v]
            } else {
               return [k,v]
         }
      }
      return [global: paramsGlobal, local: pL]
   }
}

process {
   executor = 'pbs'
   withLabel:qsub {
      executor = 'pbs'
   }
   withLabel:local {
      executor = 'local'
   }
}

timeline {
   enabled = true
   file = 'out/nextflow_reports/execution_timeline.html'
}

report {
   enabled = true
   file = 'out/nextflow_reports/execution_report.html'
}

trace {
   enabled = true
   file = 'out/nextflow_reports/execution_trace.txt'
}

dag {
   enabled = true
   file = 'out/nextflow_reports/pipeline_dag.svg'
}

min {
   enabled = false
}

singularity {
   enabled = true
   autoMounts = true
   runOptions = '-B /ddn1/vol1/staging/leuven/stg_00054,/staging/leuven/stg_00054/'
}
